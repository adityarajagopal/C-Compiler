Terminals unused in grammar

   INT
   FLOAT
   DOUBLE
   BOOL
   LONG
   UNSIGNED
   SIGNED
   CONST
   SHORT
   VOID
   STRUCT
   UNION
   TYPEDEF
   VOLATILE
   STRING_LIT
   CONTINUE_KWD
   BREAK
   ENUM
   CHAR_KWD
   FLOAT_KWD
   DOUBLE_KWD
   AUTO
   EXTERN
   REGISTER
   STATIC
   SWITCH
   CASE
   SIZEOF
   DEFAULT


State 179 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: external_decl
    2     | external_decl file

    3 external_decl: function_def
    4              | decl

    5 function_def: decl_specifiers declarator compound_statement

    6 decl: decl_specifiers SEMICOLON
    7     | decl_specifiers init_list SEMICOLON

    8 decl_specifiers: type_specifier
    9                | type_specifier decl_specifiers

   10 decl_list: decl
   11          | decl decl_list

   12 type_specifier: TYPE

   13 init_list: init_declarator
   14          | init_declarator COMMA init_list

   15 init_declarator: declarator
   16                | declarator EQUALS initial_val

   17 statement_list: statement
   18               | statement statement_list

   19 statement: compound_statement
   20          | expr_statement
   21          | selection_statement
   22          | loop_statement
   23          | jump_statement

   24 declarator: IDENTIFIER
   25           | declarator LBRAC param_list RBRAC
   26           | declarator LBRAC RBRAC

   27 param_list: param_decl
   28           | param_decl COMMA param_list

   29 param_decl: decl_specifiers declarator

   30 compound_statement: LCURLY RCURLY
   31                   | LCURLY statement_list RCURLY
   32                   | LCURLY decl_list RCURLY
   33                   | LCURLY decl_list statement_list RCURLY

   34 initial_val: assign_expr

   35 selection_statement: IF LBRAC expr RBRAC statement
   36                    | IF LBRAC expr RBRAC statement ELSE statement

   37 loop_statement: WHILE LBRAC expr RBRAC statement
   38               | do_statement
   39               | FOR LBRAC expr_statement expr_statement RBRAC statement
   40               | FOR LBRAC expr_statement expr_statement expr RBRAC statement

   41 do_statement: DO statement WHILE LBRAC expr RBRAC SEMICOLON

   42 expr_statement: SEMICOLON
   43               | expr SEMICOLON

   44 jump_statement: GOTO_KWD IDENTIFIER SEMICOLON
   45               | RETURN SEMICOLON
   46               | RETURN expr SEMICOLON

   47 expr: assign_expr
   48     | expr COMMA assign_expr

   49 assign_expr: conditional_expr
   50            | unary_expr assign_oper assign_expr

   51 assign_oper: EQUALS
   52            | MUL_EQUALS
   53            | DIV_EQUALS
   54            | MOD_EQUALS
   55            | ADD_EQUALS
   56            | SUB_EQUALS
   57            | LEFT_EQUALS
   58            | RIGHT_EQUALS
   59            | AND_EQUALS
   60            | XOR_EQUALS
   61            | OR_EQUALS

   62 conditional_expr: logical_or_expr
   63                 | ie_expr

   64 ie_expr: logical_or_expr QUESTION_MARK expr COLON conditional_expr

   65 logical_or_expr: logical_and_expr
   66                | logical_or_expr OR logical_and_expr

   67 logical_and_expr: incl_or_expr
   68                 | logical_and_expr AND incl_or_expr

   69 incl_or_expr: excl_or_expr
   70             | incl_or_expr BW_OR excl_or_expr

   71 excl_or_expr: and_expr
   72             | excl_or_expr BW_XOR and_expr

   73 and_expr: bool_equal_expr
   74         | and_expr BW_AND bool_equal_expr

   75 bool_equal_expr: comparison_expr
   76                | bool_equal_expr EQUAL_EQUAL comparison_expr
   77                | bool_equal_expr NOT_EQUAL comparison_expr

   78 comparison_expr: shift_expr
   79                | comparison_expr LT shift_expr
   80                | comparison_expr GT shift_expr
   81                | comparison_expr LE shift_expr
   82                | comparison_expr GE shift_expr

   83 shift_expr: addsub_expr
   84           | shift_expr LEFT_SHIFT addsub_expr
   85           | shift_expr RIGHT_SHIFT addsub_expr

   86 addsub_expr: multdivmod_expr
   87            | addsub_expr ADD multdivmod_expr
   88            | addsub_expr SUB multdivmod_expr

   89 multdivmod_expr: unary_expr
   90                | multdivmod_expr MULT unary_expr
   91                | multdivmod_expr DIV unary_expr
   92                | multdivmod_expr MOD unary_expr

   93 unary_expr: postfix_expr
   94           | INC unary_expr
   95           | DEC unary_expr
   96           | unary_oper unary_expr

   97 unary_oper: BW_AND
   98           | MULT
   99           | ADD
  100           | SUB
  101           | BW_NOT
  102           | NOT

  103 postfix_expr: primary_expr
  104             | postfix_expr LBRAC RBRAC
  105             | postfix_expr LBRAC argument_list RBRAC
  106             | postfix_expr INC
  107             | postfix_expr DEC

  108 argument_list: assign_expr
  109              | assign_expr COMMA argument_list

  110 primary_expr: IDENTIFIER
  111             | INT_VAL
  112             | OCT_VAL
  113             | HEX_VAL
  114             | FLOAT_VAL
  115             | CHAR
  116             | STRING
  117             | LBRAC expr RBRAC


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 6 7 41 42 43 44 45 46
COMMA (259) 14 28 48 109
LCURLY (260) 30 31 32 33
RCURLY (261) 30 31 32 33
LBRAC (262) 25 26 35 36 37 39 40 41 104 105 117
RBRAC (263) 25 26 35 36 37 39 40 41 104 105 117
INT (264)
FLOAT (265)
DOUBLE (266)
BOOL (267)
LONG (268)
UNSIGNED (269)
SIGNED (270)
CONST (271)
SHORT (272)
VOID (273)
STRUCT (274)
UNION (275)
CHAR (276) 115
TYPEDEF (277)
VOLATILE (278)
STRING (279) 116
IDENTIFIER (280) 24 44 110
INT_VAL (281) 111
FLOAT_VAL (282) 114
STRING_LIT (283)
OCT_VAL (284) 112
HEX_VAL (285) 113
IF (286) 35 36
ELSE (287) 36
FOR (288) 39 40
WHILE (289) 37 41
GOTO_KWD (290) 44
CONTINUE_KWD (291)
BREAK (292)
RETURN (293) 45 46
EQUALS (294) 16 51
MUL_EQUALS (295) 52
DIV_EQUALS (296) 53
MOD_EQUALS (297) 54
ADD_EQUALS (298) 55
SUB_EQUALS (299) 56
LEFT_EQUALS (300) 57
RIGHT_EQUALS (301) 58
AND_EQUALS (302) 59
OR_EQUALS (303) 61
XOR_EQUALS (304) 60
ADD (305) 87 99
SUB (306) 88 100
MULT (307) 90 98
DIV (308) 91
MOD (309) 92
QUESTION_MARK (310) 64
COLON (311) 64
OR (312) 66
AND (313) 68
BW_OR (314) 70
BW_XOR (315) 72
BW_AND (316) 74 97
EQUAL_EQUAL (317) 76
NOT_EQUAL (318) 77
LT (319) 79
GT (320) 80
LE (321) 81
GE (322) 82
LEFT_SHIFT (323) 84
RIGHT_SHIFT (324) 85
INC (325) 94 106
DEC (326) 95 107
BW_NOT (327) 101
NOT (328) 102
ENUM (329)
CHAR_KWD (330)
FLOAT_KWD (331)
DOUBLE_KWD (332)
AUTO (333)
EXTERN (334)
REGISTER (335)
STATIC (336)
DO (337) 41
SWITCH (338)
CASE (339)
SIZEOF (340)
DEFAULT (341)
TYPE (342) 12


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
file (89)
    on left: 1 2, on right: 0 2
external_decl (90)
    on left: 3 4, on right: 1 2
function_def (91)
    on left: 5, on right: 3
decl (92)
    on left: 6 7, on right: 4 10 11
decl_specifiers (93)
    on left: 8 9, on right: 5 6 7 9 29
decl_list (94)
    on left: 10 11, on right: 11 32 33
type_specifier (95)
    on left: 12, on right: 8 9
init_list (96)
    on left: 13 14, on right: 7 14
init_declarator (97)
    on left: 15 16, on right: 13 14
statement_list (98)
    on left: 17 18, on right: 18 31 33
statement (99)
    on left: 19 20 21 22 23, on right: 17 18 35 36 37 39 40 41
declarator (100)
    on left: 24 25 26, on right: 5 15 16 25 26 29
param_list (101)
    on left: 27 28, on right: 25 28
param_decl (102)
    on left: 29, on right: 27 28
compound_statement (103)
    on left: 30 31 32 33, on right: 5 19
initial_val (104)
    on left: 34, on right: 16
selection_statement (105)
    on left: 35 36, on right: 21
loop_statement (106)
    on left: 37 38 39 40, on right: 22
do_statement (107)
    on left: 41, on right: 38
expr_statement (108)
    on left: 42 43, on right: 20 39 40
jump_statement (109)
    on left: 44 45 46, on right: 23
expr (110)
    on left: 47 48, on right: 35 36 37 40 41 43 46 48 64 117
assign_expr (111)
    on left: 49 50, on right: 34 47 48 50 108 109
assign_oper (112)
    on left: 51 52 53 54 55 56 57 58 59 60 61, on right: 50
conditional_expr (113)
    on left: 62 63, on right: 49 64
ie_expr (114)
    on left: 64, on right: 63
logical_or_expr (115)
    on left: 65 66, on right: 62 64 66
logical_and_expr (116)
    on left: 67 68, on right: 65 66 68
incl_or_expr (117)
    on left: 69 70, on right: 67 68 70
excl_or_expr (118)
    on left: 71 72, on right: 69 70 72
and_expr (119)
    on left: 73 74, on right: 71 72 74
bool_equal_expr (120)
    on left: 75 76 77, on right: 73 74 76 77
comparison_expr (121)
    on left: 78 79 80 81 82, on right: 75 76 77 79 80 81 82
shift_expr (122)
    on left: 83 84 85, on right: 78 79 80 81 82 84 85
addsub_expr (123)
    on left: 86 87 88, on right: 83 84 85 87 88
multdivmod_expr (124)
    on left: 89 90 91 92, on right: 86 87 88 90 91 92
unary_expr (125)
    on left: 93 94 95 96, on right: 50 89 90 91 92 94 95 96
unary_oper (126)
    on left: 97 98 99 100 101 102, on right: 96
postfix_expr (127)
    on left: 103 104 105 106 107, on right: 93 104 105 106 107
argument_list (128)
    on left: 108 109, on right: 105 109
primary_expr (129)
    on left: 110 111 112 113 114 115 116 117, on right: 103


State 0

    0 $accept: . file $end

    TYPE  shift, and go to state 1

    file             go to state 2
    external_decl    go to state 3
    function_def     go to state 4
    decl             go to state 5
    decl_specifiers  go to state 6
    type_specifier   go to state 7


State 1

   12 type_specifier: TYPE .

    $default  reduce using rule 12 (type_specifier)


State 2

    0 $accept: file . $end

    $end  shift, and go to state 8


State 3

    1 file: external_decl .
    2     | external_decl . file

    TYPE  shift, and go to state 1

    $default  reduce using rule 1 (file)

    file             go to state 9
    external_decl    go to state 3
    function_def     go to state 4
    decl             go to state 5
    decl_specifiers  go to state 6
    type_specifier   go to state 7


State 4

    3 external_decl: function_def .

    $default  reduce using rule 3 (external_decl)


State 5

    4 external_decl: decl .

    $default  reduce using rule 4 (external_decl)


State 6

    5 function_def: decl_specifiers . declarator compound_statement
    6 decl: decl_specifiers . SEMICOLON
    7     | decl_specifiers . init_list SEMICOLON

    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    init_list        go to state 12
    init_declarator  go to state 13
    declarator       go to state 14


State 7

    8 decl_specifiers: type_specifier .
    9                | type_specifier . decl_specifiers

    TYPE  shift, and go to state 1

    $default  reduce using rule 8 (decl_specifiers)

    decl_specifiers  go to state 15
    type_specifier   go to state 7


State 8

    0 $accept: file $end .

    $default  accept


State 9

    2 file: external_decl file .

    $default  reduce using rule 2 (file)


State 10

    6 decl: decl_specifiers SEMICOLON .

    $default  reduce using rule 6 (decl)


State 11

   24 declarator: IDENTIFIER .

    $default  reduce using rule 24 (declarator)


State 12

    7 decl: decl_specifiers init_list . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 13

   13 init_list: init_declarator .
   14          | init_declarator . COMMA init_list

    COMMA  shift, and go to state 17

    $default  reduce using rule 13 (init_list)


State 14

    5 function_def: decl_specifiers declarator . compound_statement
   15 init_declarator: declarator .
   16                | declarator . EQUALS initial_val
   25 declarator: declarator . LBRAC param_list RBRAC
   26           | declarator . LBRAC RBRAC

    LCURLY  shift, and go to state 18
    LBRAC   shift, and go to state 19
    EQUALS  shift, and go to state 20

    $default  reduce using rule 15 (init_declarator)

    compound_statement  go to state 21


State 15

    9 decl_specifiers: type_specifier decl_specifiers .

    $default  reduce using rule 9 (decl_specifiers)


State 16

    7 decl: decl_specifiers init_list SEMICOLON .

    $default  reduce using rule 7 (decl)


State 17

   14 init_list: init_declarator COMMA . init_list

    IDENTIFIER  shift, and go to state 11

    init_list        go to state 22
    init_declarator  go to state 13
    declarator       go to state 23


State 18

   30 compound_statement: LCURLY . RCURLY
   31                   | LCURLY . statement_list RCURLY
   32                   | LCURLY . decl_list RCURLY
   33                   | LCURLY . decl_list statement_list RCURLY

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    RCURLY      shift, and go to state 25
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47
    TYPE        shift, and go to state 1

    decl                 go to state 48
    decl_specifiers      go to state 49
    decl_list            go to state 50
    type_specifier       go to state 7
    statement_list       go to state 51
    statement            go to state 52
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 19

   25 declarator: declarator LBRAC . param_list RBRAC
   26           | declarator LBRAC . RBRAC

    RBRAC  shift, and go to state 77
    TYPE   shift, and go to state 1

    decl_specifiers  go to state 78
    type_specifier   go to state 7
    param_list       go to state 79
    param_decl       go to state 80


State 20

   16 init_declarator: declarator EQUALS . initial_val

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    initial_val       go to state 81
    assign_expr       go to state 82
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 21

    5 function_def: decl_specifiers declarator compound_statement .

    $default  reduce using rule 5 (function_def)


State 22

   14 init_list: init_declarator COMMA init_list .

    $default  reduce using rule 14 (init_list)


State 23

   15 init_declarator: declarator .
   16                | declarator . EQUALS initial_val
   25 declarator: declarator . LBRAC param_list RBRAC
   26           | declarator . LBRAC RBRAC

    LBRAC   shift, and go to state 19
    EQUALS  shift, and go to state 20

    $default  reduce using rule 15 (init_declarator)


State 24

   42 expr_statement: SEMICOLON .

    $default  reduce using rule 42 (expr_statement)


State 25

   30 compound_statement: LCURLY RCURLY .

    $default  reduce using rule 30 (compound_statement)


State 26

  117 primary_expr: LBRAC . expr RBRAC

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr              go to state 83
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 27

  115 primary_expr: CHAR .

    $default  reduce using rule 115 (primary_expr)


State 28

  116 primary_expr: STRING .

    $default  reduce using rule 116 (primary_expr)


State 29

  110 primary_expr: IDENTIFIER .

    $default  reduce using rule 110 (primary_expr)


State 30

  111 primary_expr: INT_VAL .

    $default  reduce using rule 111 (primary_expr)


State 31

  114 primary_expr: FLOAT_VAL .

    $default  reduce using rule 114 (primary_expr)


State 32

  112 primary_expr: OCT_VAL .

    $default  reduce using rule 112 (primary_expr)


State 33

  113 primary_expr: HEX_VAL .

    $default  reduce using rule 113 (primary_expr)


State 34

   35 selection_statement: IF . LBRAC expr RBRAC statement
   36                    | IF . LBRAC expr RBRAC statement ELSE statement

    LBRAC  shift, and go to state 84


State 35

   39 loop_statement: FOR . LBRAC expr_statement expr_statement RBRAC statement
   40               | FOR . LBRAC expr_statement expr_statement expr RBRAC statement

    LBRAC  shift, and go to state 85


State 36

   37 loop_statement: WHILE . LBRAC expr RBRAC statement

    LBRAC  shift, and go to state 86


State 37

   44 jump_statement: GOTO_KWD . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 87


State 38

   45 jump_statement: RETURN . SEMICOLON
   46               | RETURN . expr SEMICOLON

    SEMICOLON   shift, and go to state 88
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr              go to state 89
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 39

   99 unary_oper: ADD .

    $default  reduce using rule 99 (unary_oper)


State 40

  100 unary_oper: SUB .

    $default  reduce using rule 100 (unary_oper)


State 41

   98 unary_oper: MULT .

    $default  reduce using rule 98 (unary_oper)


State 42

   97 unary_oper: BW_AND .

    $default  reduce using rule 97 (unary_oper)


State 43

   94 unary_expr: INC . unary_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    unary_expr    go to state 90
    unary_oper    go to state 74
    postfix_expr  go to state 75
    primary_expr  go to state 76


State 44

   95 unary_expr: DEC . unary_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    unary_expr    go to state 91
    unary_oper    go to state 74
    postfix_expr  go to state 75
    primary_expr  go to state 76


State 45

  101 unary_oper: BW_NOT .

    $default  reduce using rule 101 (unary_oper)


State 46

  102 unary_oper: NOT .

    $default  reduce using rule 102 (unary_oper)


State 47

   41 do_statement: DO . statement WHILE LBRAC expr RBRAC SEMICOLON

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    statement            go to state 92
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 48

   10 decl_list: decl .
   11          | decl . decl_list

    TYPE  shift, and go to state 1

    $default  reduce using rule 10 (decl_list)

    decl             go to state 48
    decl_specifiers  go to state 49
    decl_list        go to state 93
    type_specifier   go to state 7


State 49

    6 decl: decl_specifiers . SEMICOLON
    7     | decl_specifiers . init_list SEMICOLON

    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11

    init_list        go to state 12
    init_declarator  go to state 13
    declarator       go to state 23


State 50

   32 compound_statement: LCURLY decl_list . RCURLY
   33                   | LCURLY decl_list . statement_list RCURLY

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    RCURLY      shift, and go to state 94
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    statement_list       go to state 95
    statement            go to state 52
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 51

   31 compound_statement: LCURLY statement_list . RCURLY

    RCURLY  shift, and go to state 96


State 52

   17 statement_list: statement .
   18               | statement . statement_list

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    $default  reduce using rule 17 (statement_list)

    statement_list       go to state 97
    statement            go to state 52
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 53

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 54

   21 statement: selection_statement .

    $default  reduce using rule 21 (statement)


State 55

   22 statement: loop_statement .

    $default  reduce using rule 22 (statement)


State 56

   38 loop_statement: do_statement .

    $default  reduce using rule 38 (loop_statement)


State 57

   20 statement: expr_statement .

    $default  reduce using rule 20 (statement)


State 58

   23 statement: jump_statement .

    $default  reduce using rule 23 (statement)


State 59

   43 expr_statement: expr . SEMICOLON
   48 expr: expr . COMMA assign_expr

    SEMICOLON  shift, and go to state 98
    COMMA      shift, and go to state 99


State 60

   47 expr: assign_expr .

    $default  reduce using rule 47 (expr)


State 61

   49 assign_expr: conditional_expr .

    $default  reduce using rule 49 (assign_expr)


State 62

   63 conditional_expr: ie_expr .

    $default  reduce using rule 63 (conditional_expr)


State 63

   62 conditional_expr: logical_or_expr .
   64 ie_expr: logical_or_expr . QUESTION_MARK expr COLON conditional_expr
   66 logical_or_expr: logical_or_expr . OR logical_and_expr

    QUESTION_MARK  shift, and go to state 100
    OR             shift, and go to state 101

    $default  reduce using rule 62 (conditional_expr)


State 64

   65 logical_or_expr: logical_and_expr .
   68 logical_and_expr: logical_and_expr . AND incl_or_expr

    AND  shift, and go to state 102

    $default  reduce using rule 65 (logical_or_expr)


State 65

   67 logical_and_expr: incl_or_expr .
   70 incl_or_expr: incl_or_expr . BW_OR excl_or_expr

    BW_OR  shift, and go to state 103

    $default  reduce using rule 67 (logical_and_expr)


State 66

   69 incl_or_expr: excl_or_expr .
   72 excl_or_expr: excl_or_expr . BW_XOR and_expr

    BW_XOR  shift, and go to state 104

    $default  reduce using rule 69 (incl_or_expr)


State 67

   71 excl_or_expr: and_expr .
   74 and_expr: and_expr . BW_AND bool_equal_expr

    BW_AND  shift, and go to state 105

    $default  reduce using rule 71 (excl_or_expr)


State 68

   73 and_expr: bool_equal_expr .
   76 bool_equal_expr: bool_equal_expr . EQUAL_EQUAL comparison_expr
   77                | bool_equal_expr . NOT_EQUAL comparison_expr

    EQUAL_EQUAL  shift, and go to state 106
    NOT_EQUAL    shift, and go to state 107

    $default  reduce using rule 73 (and_expr)


State 69

   75 bool_equal_expr: comparison_expr .
   79 comparison_expr: comparison_expr . LT shift_expr
   80                | comparison_expr . GT shift_expr
   81                | comparison_expr . LE shift_expr
   82                | comparison_expr . GE shift_expr

    LT  shift, and go to state 108
    GT  shift, and go to state 109
    LE  shift, and go to state 110
    GE  shift, and go to state 111

    $default  reduce using rule 75 (bool_equal_expr)


State 70

   78 comparison_expr: shift_expr .
   84 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   85           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 112
    RIGHT_SHIFT  shift, and go to state 113

    $default  reduce using rule 78 (comparison_expr)


State 71

   83 shift_expr: addsub_expr .
   87 addsub_expr: addsub_expr . ADD multdivmod_expr
   88            | addsub_expr . SUB multdivmod_expr

    ADD  shift, and go to state 114
    SUB  shift, and go to state 115

    $default  reduce using rule 83 (shift_expr)


State 72

   86 addsub_expr: multdivmod_expr .
   90 multdivmod_expr: multdivmod_expr . MULT unary_expr
   91                | multdivmod_expr . DIV unary_expr
   92                | multdivmod_expr . MOD unary_expr

    MULT  shift, and go to state 116
    DIV   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 86 (addsub_expr)


State 73

   50 assign_expr: unary_expr . assign_oper assign_expr
   89 multdivmod_expr: unary_expr .

    EQUALS        shift, and go to state 119
    MUL_EQUALS    shift, and go to state 120
    DIV_EQUALS    shift, and go to state 121
    MOD_EQUALS    shift, and go to state 122
    ADD_EQUALS    shift, and go to state 123
    SUB_EQUALS    shift, and go to state 124
    LEFT_EQUALS   shift, and go to state 125
    RIGHT_EQUALS  shift, and go to state 126
    AND_EQUALS    shift, and go to state 127
    OR_EQUALS     shift, and go to state 128
    XOR_EQUALS    shift, and go to state 129

    $default  reduce using rule 89 (multdivmod_expr)

    assign_oper  go to state 130


State 74

   96 unary_expr: unary_oper . unary_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    unary_expr    go to state 131
    unary_oper    go to state 74
    postfix_expr  go to state 75
    primary_expr  go to state 76


State 75

   93 unary_expr: postfix_expr .
  104 postfix_expr: postfix_expr . LBRAC RBRAC
  105             | postfix_expr . LBRAC argument_list RBRAC
  106             | postfix_expr . INC
  107             | postfix_expr . DEC

    LBRAC  shift, and go to state 132
    INC    shift, and go to state 133
    DEC    shift, and go to state 134

    $default  reduce using rule 93 (unary_expr)


State 76

  103 postfix_expr: primary_expr .

    $default  reduce using rule 103 (postfix_expr)


State 77

   26 declarator: declarator LBRAC RBRAC .

    $default  reduce using rule 26 (declarator)


State 78

   29 param_decl: decl_specifiers . declarator

    IDENTIFIER  shift, and go to state 11

    declarator  go to state 135


State 79

   25 declarator: declarator LBRAC param_list . RBRAC

    RBRAC  shift, and go to state 136


State 80

   27 param_list: param_decl .
   28           | param_decl . COMMA param_list

    COMMA  shift, and go to state 137

    $default  reduce using rule 27 (param_list)


State 81

   16 init_declarator: declarator EQUALS initial_val .

    $default  reduce using rule 16 (init_declarator)


State 82

   34 initial_val: assign_expr .

    $default  reduce using rule 34 (initial_val)


State 83

   48 expr: expr . COMMA assign_expr
  117 primary_expr: LBRAC expr . RBRAC

    COMMA  shift, and go to state 99
    RBRAC  shift, and go to state 138


State 84

   35 selection_statement: IF LBRAC . expr RBRAC statement
   36                    | IF LBRAC . expr RBRAC statement ELSE statement

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr              go to state 139
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 85

   39 loop_statement: FOR LBRAC . expr_statement expr_statement RBRAC statement
   40               | FOR LBRAC . expr_statement expr_statement expr RBRAC statement

    SEMICOLON   shift, and go to state 24
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr_statement    go to state 140
    expr              go to state 59
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 86

   37 loop_statement: WHILE LBRAC . expr RBRAC statement

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr              go to state 141
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 87

   44 jump_statement: GOTO_KWD IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 88

   45 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 45 (jump_statement)


State 89

   46 jump_statement: RETURN expr . SEMICOLON
   48 expr: expr . COMMA assign_expr

    SEMICOLON  shift, and go to state 143
    COMMA      shift, and go to state 99


State 90

   94 unary_expr: INC unary_expr .

    $default  reduce using rule 94 (unary_expr)


State 91

   95 unary_expr: DEC unary_expr .

    $default  reduce using rule 95 (unary_expr)


State 92

   41 do_statement: DO statement . WHILE LBRAC expr RBRAC SEMICOLON

    WHILE  shift, and go to state 144


State 93

   11 decl_list: decl decl_list .

    $default  reduce using rule 11 (decl_list)


State 94

   32 compound_statement: LCURLY decl_list RCURLY .

    $default  reduce using rule 32 (compound_statement)


State 95

   33 compound_statement: LCURLY decl_list statement_list . RCURLY

    RCURLY  shift, and go to state 145


State 96

   31 compound_statement: LCURLY statement_list RCURLY .

    $default  reduce using rule 31 (compound_statement)


State 97

   18 statement_list: statement statement_list .

    $default  reduce using rule 18 (statement_list)


State 98

   43 expr_statement: expr SEMICOLON .

    $default  reduce using rule 43 (expr_statement)


State 99

   48 expr: expr COMMA . assign_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    assign_expr       go to state 146
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 100

   64 ie_expr: logical_or_expr QUESTION_MARK . expr COLON conditional_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr              go to state 147
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 101

   66 logical_or_expr: logical_or_expr OR . logical_and_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    logical_and_expr  go to state 148
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 149
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 102

   68 logical_and_expr: logical_and_expr AND . incl_or_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    incl_or_expr     go to state 150
    excl_or_expr     go to state 66
    and_expr         go to state 67
    bool_equal_expr  go to state 68
    comparison_expr  go to state 69
    shift_expr       go to state 70
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 103

   70 incl_or_expr: incl_or_expr BW_OR . excl_or_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    excl_or_expr     go to state 151
    and_expr         go to state 67
    bool_equal_expr  go to state 68
    comparison_expr  go to state 69
    shift_expr       go to state 70
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 104

   72 excl_or_expr: excl_or_expr BW_XOR . and_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    and_expr         go to state 152
    bool_equal_expr  go to state 68
    comparison_expr  go to state 69
    shift_expr       go to state 70
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 105

   74 and_expr: and_expr BW_AND . bool_equal_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    bool_equal_expr  go to state 153
    comparison_expr  go to state 69
    shift_expr       go to state 70
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 106

   76 bool_equal_expr: bool_equal_expr EQUAL_EQUAL . comparison_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    comparison_expr  go to state 154
    shift_expr       go to state 70
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 107

   77 bool_equal_expr: bool_equal_expr NOT_EQUAL . comparison_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    comparison_expr  go to state 155
    shift_expr       go to state 70
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 108

   79 comparison_expr: comparison_expr LT . shift_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    shift_expr       go to state 156
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 109

   80 comparison_expr: comparison_expr GT . shift_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    shift_expr       go to state 157
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 110

   81 comparison_expr: comparison_expr LE . shift_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    shift_expr       go to state 158
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 111

   82 comparison_expr: comparison_expr GE . shift_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    shift_expr       go to state 159
    addsub_expr      go to state 71
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 112

   84 shift_expr: shift_expr LEFT_SHIFT . addsub_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    addsub_expr      go to state 160
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 113

   85 shift_expr: shift_expr RIGHT_SHIFT . addsub_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    addsub_expr      go to state 161
    multdivmod_expr  go to state 72
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 114

   87 addsub_expr: addsub_expr ADD . multdivmod_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    multdivmod_expr  go to state 162
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 115

   88 addsub_expr: addsub_expr SUB . multdivmod_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    multdivmod_expr  go to state 163
    unary_expr       go to state 149
    unary_oper       go to state 74
    postfix_expr     go to state 75
    primary_expr     go to state 76


State 116

   90 multdivmod_expr: multdivmod_expr MULT . unary_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    unary_expr    go to state 164
    unary_oper    go to state 74
    postfix_expr  go to state 75
    primary_expr  go to state 76


State 117

   91 multdivmod_expr: multdivmod_expr DIV . unary_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    unary_expr    go to state 165
    unary_oper    go to state 74
    postfix_expr  go to state 75
    primary_expr  go to state 76


State 118

   92 multdivmod_expr: multdivmod_expr MOD . unary_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    unary_expr    go to state 166
    unary_oper    go to state 74
    postfix_expr  go to state 75
    primary_expr  go to state 76


State 119

   51 assign_oper: EQUALS .

    $default  reduce using rule 51 (assign_oper)


State 120

   52 assign_oper: MUL_EQUALS .

    $default  reduce using rule 52 (assign_oper)


State 121

   53 assign_oper: DIV_EQUALS .

    $default  reduce using rule 53 (assign_oper)


State 122

   54 assign_oper: MOD_EQUALS .

    $default  reduce using rule 54 (assign_oper)


State 123

   55 assign_oper: ADD_EQUALS .

    $default  reduce using rule 55 (assign_oper)


State 124

   56 assign_oper: SUB_EQUALS .

    $default  reduce using rule 56 (assign_oper)


State 125

   57 assign_oper: LEFT_EQUALS .

    $default  reduce using rule 57 (assign_oper)


State 126

   58 assign_oper: RIGHT_EQUALS .

    $default  reduce using rule 58 (assign_oper)


State 127

   59 assign_oper: AND_EQUALS .

    $default  reduce using rule 59 (assign_oper)


State 128

   61 assign_oper: OR_EQUALS .

    $default  reduce using rule 61 (assign_oper)


State 129

   60 assign_oper: XOR_EQUALS .

    $default  reduce using rule 60 (assign_oper)


State 130

   50 assign_expr: unary_expr assign_oper . assign_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    assign_expr       go to state 167
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 131

   96 unary_expr: unary_oper unary_expr .

    $default  reduce using rule 96 (unary_expr)


State 132

  104 postfix_expr: postfix_expr LBRAC . RBRAC
  105             | postfix_expr LBRAC . argument_list RBRAC

    LBRAC       shift, and go to state 26
    RBRAC       shift, and go to state 168
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    assign_expr       go to state 169
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    argument_list     go to state 170
    primary_expr      go to state 76


State 133

  106 postfix_expr: postfix_expr INC .

    $default  reduce using rule 106 (postfix_expr)


State 134

  107 postfix_expr: postfix_expr DEC .

    $default  reduce using rule 107 (postfix_expr)


State 135

   25 declarator: declarator . LBRAC param_list RBRAC
   26           | declarator . LBRAC RBRAC
   29 param_decl: decl_specifiers declarator .

    LBRAC  shift, and go to state 19

    $default  reduce using rule 29 (param_decl)


State 136

   25 declarator: declarator LBRAC param_list RBRAC .

    $default  reduce using rule 25 (declarator)


State 137

   28 param_list: param_decl COMMA . param_list

    TYPE  shift, and go to state 1

    decl_specifiers  go to state 78
    type_specifier   go to state 7
    param_list       go to state 171
    param_decl       go to state 80


State 138

  117 primary_expr: LBRAC expr RBRAC .

    $default  reduce using rule 117 (primary_expr)


State 139

   35 selection_statement: IF LBRAC expr . RBRAC statement
   36                    | IF LBRAC expr . RBRAC statement ELSE statement
   48 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 99
    RBRAC  shift, and go to state 172


State 140

   39 loop_statement: FOR LBRAC expr_statement . expr_statement RBRAC statement
   40               | FOR LBRAC expr_statement . expr_statement expr RBRAC statement

    SEMICOLON   shift, and go to state 24
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr_statement    go to state 173
    expr              go to state 59
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 141

   37 loop_statement: WHILE LBRAC expr . RBRAC statement
   48 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 99
    RBRAC  shift, and go to state 174


State 142

   44 jump_statement: GOTO_KWD IDENTIFIER SEMICOLON .

    $default  reduce using rule 44 (jump_statement)


State 143

   46 jump_statement: RETURN expr SEMICOLON .

    $default  reduce using rule 46 (jump_statement)


State 144

   41 do_statement: DO statement WHILE . LBRAC expr RBRAC SEMICOLON

    LBRAC  shift, and go to state 175


State 145

   33 compound_statement: LCURLY decl_list statement_list RCURLY .

    $default  reduce using rule 33 (compound_statement)


State 146

   48 expr: expr COMMA assign_expr .

    $default  reduce using rule 48 (expr)


State 147

   48 expr: expr . COMMA assign_expr
   64 ie_expr: logical_or_expr QUESTION_MARK expr . COLON conditional_expr

    COMMA  shift, and go to state 99
    COLON  shift, and go to state 176


State 148

   66 logical_or_expr: logical_or_expr OR logical_and_expr .
   68 logical_and_expr: logical_and_expr . AND incl_or_expr

    AND  shift, and go to state 102

    $default  reduce using rule 66 (logical_or_expr)


State 149

   89 multdivmod_expr: unary_expr .

    $default  reduce using rule 89 (multdivmod_expr)


State 150

   68 logical_and_expr: logical_and_expr AND incl_or_expr .
   70 incl_or_expr: incl_or_expr . BW_OR excl_or_expr

    BW_OR  shift, and go to state 103

    $default  reduce using rule 68 (logical_and_expr)


State 151

   70 incl_or_expr: incl_or_expr BW_OR excl_or_expr .
   72 excl_or_expr: excl_or_expr . BW_XOR and_expr

    BW_XOR  shift, and go to state 104

    $default  reduce using rule 70 (incl_or_expr)


State 152

   72 excl_or_expr: excl_or_expr BW_XOR and_expr .
   74 and_expr: and_expr . BW_AND bool_equal_expr

    BW_AND  shift, and go to state 105

    $default  reduce using rule 72 (excl_or_expr)


State 153

   74 and_expr: and_expr BW_AND bool_equal_expr .
   76 bool_equal_expr: bool_equal_expr . EQUAL_EQUAL comparison_expr
   77                | bool_equal_expr . NOT_EQUAL comparison_expr

    EQUAL_EQUAL  shift, and go to state 106
    NOT_EQUAL    shift, and go to state 107

    $default  reduce using rule 74 (and_expr)


State 154

   76 bool_equal_expr: bool_equal_expr EQUAL_EQUAL comparison_expr .
   79 comparison_expr: comparison_expr . LT shift_expr
   80                | comparison_expr . GT shift_expr
   81                | comparison_expr . LE shift_expr
   82                | comparison_expr . GE shift_expr

    LT  shift, and go to state 108
    GT  shift, and go to state 109
    LE  shift, and go to state 110
    GE  shift, and go to state 111

    $default  reduce using rule 76 (bool_equal_expr)


State 155

   77 bool_equal_expr: bool_equal_expr NOT_EQUAL comparison_expr .
   79 comparison_expr: comparison_expr . LT shift_expr
   80                | comparison_expr . GT shift_expr
   81                | comparison_expr . LE shift_expr
   82                | comparison_expr . GE shift_expr

    LT  shift, and go to state 108
    GT  shift, and go to state 109
    LE  shift, and go to state 110
    GE  shift, and go to state 111

    $default  reduce using rule 77 (bool_equal_expr)


State 156

   79 comparison_expr: comparison_expr LT shift_expr .
   84 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   85           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 112
    RIGHT_SHIFT  shift, and go to state 113

    $default  reduce using rule 79 (comparison_expr)


State 157

   80 comparison_expr: comparison_expr GT shift_expr .
   84 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   85           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 112
    RIGHT_SHIFT  shift, and go to state 113

    $default  reduce using rule 80 (comparison_expr)


State 158

   81 comparison_expr: comparison_expr LE shift_expr .
   84 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   85           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 112
    RIGHT_SHIFT  shift, and go to state 113

    $default  reduce using rule 81 (comparison_expr)


State 159

   82 comparison_expr: comparison_expr GE shift_expr .
   84 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   85           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 112
    RIGHT_SHIFT  shift, and go to state 113

    $default  reduce using rule 82 (comparison_expr)


State 160

   84 shift_expr: shift_expr LEFT_SHIFT addsub_expr .
   87 addsub_expr: addsub_expr . ADD multdivmod_expr
   88            | addsub_expr . SUB multdivmod_expr

    ADD  shift, and go to state 114
    SUB  shift, and go to state 115

    $default  reduce using rule 84 (shift_expr)


State 161

   85 shift_expr: shift_expr RIGHT_SHIFT addsub_expr .
   87 addsub_expr: addsub_expr . ADD multdivmod_expr
   88            | addsub_expr . SUB multdivmod_expr

    ADD  shift, and go to state 114
    SUB  shift, and go to state 115

    $default  reduce using rule 85 (shift_expr)


State 162

   87 addsub_expr: addsub_expr ADD multdivmod_expr .
   90 multdivmod_expr: multdivmod_expr . MULT unary_expr
   91                | multdivmod_expr . DIV unary_expr
   92                | multdivmod_expr . MOD unary_expr

    MULT  shift, and go to state 116
    DIV   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 87 (addsub_expr)


State 163

   88 addsub_expr: addsub_expr SUB multdivmod_expr .
   90 multdivmod_expr: multdivmod_expr . MULT unary_expr
   91                | multdivmod_expr . DIV unary_expr
   92                | multdivmod_expr . MOD unary_expr

    MULT  shift, and go to state 116
    DIV   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 88 (addsub_expr)


State 164

   90 multdivmod_expr: multdivmod_expr MULT unary_expr .

    $default  reduce using rule 90 (multdivmod_expr)


State 165

   91 multdivmod_expr: multdivmod_expr DIV unary_expr .

    $default  reduce using rule 91 (multdivmod_expr)


State 166

   92 multdivmod_expr: multdivmod_expr MOD unary_expr .

    $default  reduce using rule 92 (multdivmod_expr)


State 167

   50 assign_expr: unary_expr assign_oper assign_expr .

    $default  reduce using rule 50 (assign_expr)


State 168

  104 postfix_expr: postfix_expr LBRAC RBRAC .

    $default  reduce using rule 104 (postfix_expr)


State 169

  108 argument_list: assign_expr .
  109              | assign_expr . COMMA argument_list

    COMMA  shift, and go to state 177

    $default  reduce using rule 108 (argument_list)


State 170

  105 postfix_expr: postfix_expr LBRAC argument_list . RBRAC

    RBRAC  shift, and go to state 178


State 171

   28 param_list: param_decl COMMA param_list .

    $default  reduce using rule 28 (param_list)


State 172

   35 selection_statement: IF LBRAC expr RBRAC . statement
   36                    | IF LBRAC expr RBRAC . statement ELSE statement

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    statement            go to state 179
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 173

   39 loop_statement: FOR LBRAC expr_statement expr_statement . RBRAC statement
   40               | FOR LBRAC expr_statement expr_statement . expr RBRAC statement

    LBRAC       shift, and go to state 26
    RBRAC       shift, and go to state 180
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr              go to state 181
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 174

   37 loop_statement: WHILE LBRAC expr RBRAC . statement

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    statement            go to state 182
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 175

   41 do_statement: DO statement WHILE LBRAC . expr RBRAC SEMICOLON

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    expr              go to state 183
    assign_expr       go to state 60
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 176

   64 ie_expr: logical_or_expr QUESTION_MARK expr COLON . conditional_expr

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    conditional_expr  go to state 184
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 149
    unary_oper        go to state 74
    postfix_expr      go to state 75
    primary_expr      go to state 76


State 177

  109 argument_list: assign_expr COMMA . argument_list

    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46

    assign_expr       go to state 169
    conditional_expr  go to state 61
    ie_expr           go to state 62
    logical_or_expr   go to state 63
    logical_and_expr  go to state 64
    incl_or_expr      go to state 65
    excl_or_expr      go to state 66
    and_expr          go to state 67
    bool_equal_expr   go to state 68
    comparison_expr   go to state 69
    shift_expr        go to state 70
    addsub_expr       go to state 71
    multdivmod_expr   go to state 72
    unary_expr        go to state 73
    unary_oper        go to state 74
    postfix_expr      go to state 75
    argument_list     go to state 185
    primary_expr      go to state 76


State 178

  105 postfix_expr: postfix_expr LBRAC argument_list RBRAC .

    $default  reduce using rule 105 (postfix_expr)


State 179

   35 selection_statement: IF LBRAC expr RBRAC statement .
   36                    | IF LBRAC expr RBRAC statement . ELSE statement

    ELSE  shift, and go to state 186

    ELSE      [reduce using rule 35 (selection_statement)]
    $default  reduce using rule 35 (selection_statement)


State 180

   39 loop_statement: FOR LBRAC expr_statement expr_statement RBRAC . statement

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    statement            go to state 187
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 181

   40 loop_statement: FOR LBRAC expr_statement expr_statement expr . RBRAC statement
   48 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 99
    RBRAC  shift, and go to state 188


State 182

   37 loop_statement: WHILE LBRAC expr RBRAC statement .

    $default  reduce using rule 37 (loop_statement)


State 183

   41 do_statement: DO statement WHILE LBRAC expr . RBRAC SEMICOLON
   48 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 99
    RBRAC  shift, and go to state 189


State 184

   64 ie_expr: logical_or_expr QUESTION_MARK expr COLON conditional_expr .

    $default  reduce using rule 64 (ie_expr)


State 185

  109 argument_list: assign_expr COMMA argument_list .

    $default  reduce using rule 109 (argument_list)


State 186

   36 selection_statement: IF LBRAC expr RBRAC statement ELSE . statement

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    statement            go to state 190
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 187

   39 loop_statement: FOR LBRAC expr_statement expr_statement RBRAC statement .

    $default  reduce using rule 39 (loop_statement)


State 188

   40 loop_statement: FOR LBRAC expr_statement expr_statement expr RBRAC . statement

    SEMICOLON   shift, and go to state 24
    LCURLY      shift, and go to state 18
    LBRAC       shift, and go to state 26
    CHAR        shift, and go to state 27
    STRING      shift, and go to state 28
    IDENTIFIER  shift, and go to state 29
    INT_VAL     shift, and go to state 30
    FLOAT_VAL   shift, and go to state 31
    OCT_VAL     shift, and go to state 32
    HEX_VAL     shift, and go to state 33
    IF          shift, and go to state 34
    FOR         shift, and go to state 35
    WHILE       shift, and go to state 36
    GOTO_KWD    shift, and go to state 37
    RETURN      shift, and go to state 38
    ADD         shift, and go to state 39
    SUB         shift, and go to state 40
    MULT        shift, and go to state 41
    BW_AND      shift, and go to state 42
    INC         shift, and go to state 43
    DEC         shift, and go to state 44
    BW_NOT      shift, and go to state 45
    NOT         shift, and go to state 46
    DO          shift, and go to state 47

    statement            go to state 191
    compound_statement   go to state 53
    selection_statement  go to state 54
    loop_statement       go to state 55
    do_statement         go to state 56
    expr_statement       go to state 57
    jump_statement       go to state 58
    expr                 go to state 59
    assign_expr          go to state 60
    conditional_expr     go to state 61
    ie_expr              go to state 62
    logical_or_expr      go to state 63
    logical_and_expr     go to state 64
    incl_or_expr         go to state 65
    excl_or_expr         go to state 66
    and_expr             go to state 67
    bool_equal_expr      go to state 68
    comparison_expr      go to state 69
    shift_expr           go to state 70
    addsub_expr          go to state 71
    multdivmod_expr      go to state 72
    unary_expr           go to state 73
    unary_oper           go to state 74
    postfix_expr         go to state 75
    primary_expr         go to state 76


State 189

   41 do_statement: DO statement WHILE LBRAC expr RBRAC . SEMICOLON

    SEMICOLON  shift, and go to state 192


State 190

   36 selection_statement: IF LBRAC expr RBRAC statement ELSE statement .

    $default  reduce using rule 36 (selection_statement)


State 191

   40 loop_statement: FOR LBRAC expr_statement expr_statement expr RBRAC statement .

    $default  reduce using rule 40 (loop_statement)


State 192

   41 do_statement: DO statement WHILE LBRAC expr RBRAC SEMICOLON .

    $default  reduce using rule 41 (do_statement)

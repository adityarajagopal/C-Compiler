Terminals unused in grammar

   INT
   FLOAT
   DOUBLE
   BOOL
   LONG
   UNSIGNED
   SIGNED
   CONST
   SHORT
   VOID
   STRUCT
   UNION
   TYPEDEF
   VOLATILE
   STRING_LIT
   CONTINUE_KWD
   ENUM
   CHAR_KWD
   FLOAT_KWD
   DOUBLE_KWD
   AUTO
   EXTERN
   REGISTER
   STATIC
   SIZEOF


Rules useless in parser due to conflicts

   32 pointer: pointer MULT


State 25 conflicts: 2 reduce/reduce
State 26 conflicts: 2 shift/reduce
State 213 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: external_decl
    2     | external_decl file

    3 external_decl: function_def
    4              | decl

    5 function_def: decl_specifiers declarator compound_statement

    6 decl: decl_specifiers SEMICOLON
    7     | decl_specifiers init_list SEMICOLON

    8 decl_specifiers: type_specifier
    9                | type_specifier decl_specifiers

   10 decl_list: decl
   11          | decl decl_list

   12 type_specifier: TYPE

   13 init_list: init_declarator
   14          | init_declarator COMMA init_list

   15 init_declarator: declarator
   16                | declarator EQUALS initial_val

   17 statement_list: statement
   18               | statement statement_list

   19 statement: compound_statement
   20          | expr_statement
   21          | selection_statement
   22          | loop_statement
   23          | jump_statement
   24          | tag_statement

   25 declarator: IDENTIFIER
   26           | declarator LBRAC param_list RBRAC
   27           | declarator LBRAC RBRAC
   28           | declarator LSQBRAC conditional_expr RSQBRAC
   29           | declarator LSQBRAC RSQBRAC
   30           | pointer declarator

   31 pointer: MULT
   32        | pointer MULT

   33 param_list: param_decl
   34           | param_decl COMMA param_list

   35 param_decl: decl_specifiers declarator

   36 compound_statement: LCURLY RCURLY
   37                   | LCURLY statement_list RCURLY
   38                   | LCURLY decl_list RCURLY
   39                   | LCURLY decl_list statement_list RCURLY

   40 initial_val: assign_expr
   41            | LCURLY init_val_list RCURLY

   42 init_val_list: initial_val
   43              | initial_val COMMA init_val_list

   44 selection_statement: IF LBRAC expr RBRAC statement
   45                    | IF LBRAC expr RBRAC statement ELSE statement
   46                    | SWITCH LBRAC expr RBRAC statement

   47 loop_statement: WHILE LBRAC expr RBRAC statement
   48               | do_statement
   49               | FOR LBRAC expr_statement expr_statement RBRAC statement
   50               | FOR LBRAC expr_statement expr_statement expr RBRAC statement

   51 do_statement: DO statement WHILE LBRAC expr RBRAC SEMICOLON

   52 expr_statement: SEMICOLON
   53               | expr SEMICOLON

   54 jump_statement: GOTO_KWD IDENTIFIER SEMICOLON
   55               | RETURN SEMICOLON
   56               | RETURN expr SEMICOLON
   57               | BREAK SEMICOLON

   58 tag_statement: IDENTIFIER COLON statement
   59              | CASE conditional_expr COLON statement
   60              | DEFAULT COLON statement

   61 expr: assign_expr
   62     | expr COMMA assign_expr

   63 assign_expr: conditional_expr
   64            | unary_expr assign_oper assign_expr

   65 assign_oper: EQUALS
   66            | MUL_EQUALS
   67            | DIV_EQUALS
   68            | MOD_EQUALS
   69            | ADD_EQUALS
   70            | SUB_EQUALS
   71            | LEFT_EQUALS
   72            | RIGHT_EQUALS
   73            | AND_EQUALS
   74            | XOR_EQUALS
   75            | OR_EQUALS

   76 conditional_expr: logical_or_expr
   77                 | ie_expr

   78 ie_expr: logical_or_expr QUESTION_MARK expr COLON conditional_expr

   79 logical_or_expr: logical_and_expr
   80                | logical_or_expr OR logical_and_expr

   81 logical_and_expr: incl_or_expr
   82                 | logical_and_expr AND incl_or_expr

   83 incl_or_expr: excl_or_expr
   84             | incl_or_expr BW_OR excl_or_expr

   85 excl_or_expr: and_expr
   86             | excl_or_expr BW_XOR and_expr

   87 and_expr: bool_equal_expr
   88         | and_expr BW_AND bool_equal_expr

   89 bool_equal_expr: comparison_expr
   90                | bool_equal_expr EQUAL_EQUAL comparison_expr
   91                | bool_equal_expr NOT_EQUAL comparison_expr

   92 comparison_expr: shift_expr
   93                | comparison_expr LT shift_expr
   94                | comparison_expr GT shift_expr
   95                | comparison_expr LE shift_expr
   96                | comparison_expr GE shift_expr

   97 shift_expr: addsub_expr
   98           | shift_expr LEFT_SHIFT addsub_expr
   99           | shift_expr RIGHT_SHIFT addsub_expr

  100 addsub_expr: multdivmod_expr
  101            | addsub_expr ADD multdivmod_expr
  102            | addsub_expr SUB multdivmod_expr

  103 multdivmod_expr: unary_expr
  104                | multdivmod_expr MULT unary_expr
  105                | multdivmod_expr DIV unary_expr
  106                | multdivmod_expr MOD unary_expr

  107 unary_expr: postfix_expr
  108           | INC unary_expr
  109           | DEC unary_expr
  110           | unary_oper unary_expr

  111 unary_oper: BW_AND
  112           | MULT
  113           | ADD
  114           | SUB
  115           | BW_NOT
  116           | NOT

  117 postfix_expr: primary_expr
  118             | postfix_expr LBRAC RBRAC
  119             | postfix_expr LBRAC argument_list RBRAC
  120             | postfix_expr INC
  121             | postfix_expr DEC
  122             | postfix_expr LSQBRAC expr RSQBRAC

  123 argument_list: assign_expr
  124              | assign_expr COMMA argument_list

  125 primary_expr: IDENTIFIER
  126             | INT_VAL
  127             | OCT_VAL
  128             | HEX_VAL
  129             | FLOAT_VAL
  130             | CHAR
  131             | STRING
  132             | LBRAC expr RBRAC


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 6 7 51 52 53 54 55 56 57
COMMA (259) 14 34 43 62 124
LCURLY (260) 36 37 38 39 41
RCURLY (261) 36 37 38 39 41
LBRAC (262) 26 27 44 45 46 47 49 50 51 118 119 132
RBRAC (263) 26 27 44 45 46 47 49 50 51 118 119 132
LSQBRAC (264) 28 29 122
RSQBRAC (265) 28 29 122
INT (266)
FLOAT (267)
DOUBLE (268)
BOOL (269)
LONG (270)
UNSIGNED (271)
SIGNED (272)
CONST (273)
SHORT (274)
VOID (275)
STRUCT (276)
UNION (277)
CHAR (278) 130
TYPEDEF (279)
VOLATILE (280)
STRING (281) 131
IDENTIFIER (282) 25 54 58 125
INT_VAL (283) 126
FLOAT_VAL (284) 129
STRING_LIT (285)
OCT_VAL (286) 127
HEX_VAL (287) 128
IF (288) 44 45
ELSE (289) 45
FOR (290) 49 50
WHILE (291) 47 51
GOTO_KWD (292) 54
CONTINUE_KWD (293)
BREAK (294) 57
RETURN (295) 55 56
EQUALS (296) 16 65
MUL_EQUALS (297) 66
DIV_EQUALS (298) 67
MOD_EQUALS (299) 68
ADD_EQUALS (300) 69
SUB_EQUALS (301) 70
LEFT_EQUALS (302) 71
RIGHT_EQUALS (303) 72
AND_EQUALS (304) 73
OR_EQUALS (305) 75
XOR_EQUALS (306) 74
ADD (307) 101 113
SUB (308) 102 114
MULT (309) 31 32 104 112
DIV (310) 105
MOD (311) 106
QUESTION_MARK (312) 78
COLON (313) 58 59 60 78
OR (314) 80
AND (315) 82
BW_OR (316) 84
BW_XOR (317) 86
BW_AND (318) 88 111
EQUAL_EQUAL (319) 90
NOT_EQUAL (320) 91
LT (321) 93
GT (322) 94
LE (323) 95
GE (324) 96
LEFT_SHIFT (325) 98
RIGHT_SHIFT (326) 99
INC (327) 108 120
DEC (328) 109 121
BW_NOT (329) 115
NOT (330) 116
ENUM (331)
CHAR_KWD (332)
FLOAT_KWD (333)
DOUBLE_KWD (334)
AUTO (335)
EXTERN (336)
REGISTER (337)
STATIC (338)
DO (339) 51
SWITCH (340) 46
CASE (341) 59
SIZEOF (342)
DEFAULT (343) 60
TYPE (344) 12


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
file (91)
    on left: 1 2, on right: 0 2
external_decl (92)
    on left: 3 4, on right: 1 2
function_def (93)
    on left: 5, on right: 3
decl (94)
    on left: 6 7, on right: 4 10 11
decl_specifiers (95)
    on left: 8 9, on right: 5 6 7 9 35
decl_list (96)
    on left: 10 11, on right: 11 38 39
type_specifier (97)
    on left: 12, on right: 8 9
init_list (98)
    on left: 13 14, on right: 7 14
init_declarator (99)
    on left: 15 16, on right: 13 14
statement_list (100)
    on left: 17 18, on right: 18 37 39
statement (101)
    on left: 19 20 21 22 23 24, on right: 17 18 44 45 46 47 49 50 51
    58 59 60
declarator (102)
    on left: 25 26 27 28 29 30, on right: 5 15 16 26 27 28 29 30 35
pointer (103)
    on left: 31 32, on right: 30 32
param_list (104)
    on left: 33 34, on right: 26 34
param_decl (105)
    on left: 35, on right: 33 34
compound_statement (106)
    on left: 36 37 38 39, on right: 5 19
initial_val (107)
    on left: 40 41, on right: 16 42 43
init_val_list (108)
    on left: 42 43, on right: 41 43
selection_statement (109)
    on left: 44 45 46, on right: 21
loop_statement (110)
    on left: 47 48 49 50, on right: 22
do_statement (111)
    on left: 51, on right: 48
expr_statement (112)
    on left: 52 53, on right: 20 49 50
jump_statement (113)
    on left: 54 55 56 57, on right: 23
tag_statement (114)
    on left: 58 59 60, on right: 24
expr (115)
    on left: 61 62, on right: 44 45 46 47 50 51 53 56 62 78 122 132
assign_expr (116)
    on left: 63 64, on right: 40 61 62 64 123 124
assign_oper (117)
    on left: 65 66 67 68 69 70 71 72 73 74 75, on right: 64
conditional_expr (118)
    on left: 76 77, on right: 28 59 63 78
ie_expr (119)
    on left: 78, on right: 77
logical_or_expr (120)
    on left: 79 80, on right: 76 78 80
logical_and_expr (121)
    on left: 81 82, on right: 79 80 82
incl_or_expr (122)
    on left: 83 84, on right: 81 82 84
excl_or_expr (123)
    on left: 85 86, on right: 83 84 86
and_expr (124)
    on left: 87 88, on right: 85 86 88
bool_equal_expr (125)
    on left: 89 90 91, on right: 87 88 90 91
comparison_expr (126)
    on left: 92 93 94 95 96, on right: 89 90 91 93 94 95 96
shift_expr (127)
    on left: 97 98 99, on right: 92 93 94 95 96 98 99
addsub_expr (128)
    on left: 100 101 102, on right: 97 98 99 101 102
multdivmod_expr (129)
    on left: 103 104 105 106, on right: 100 101 102 104 105 106
unary_expr (130)
    on left: 107 108 109 110, on right: 64 103 104 105 106 108 109
    110
unary_oper (131)
    on left: 111 112 113 114 115 116, on right: 110
postfix_expr (132)
    on left: 117 118 119 120 121 122, on right: 107 118 119 120 121
    122
argument_list (133)
    on left: 123 124, on right: 119 124
primary_expr (134)
    on left: 125 126 127 128 129 130 131 132, on right: 117


State 0

    0 $accept: . file $end

    TYPE  shift, and go to state 1

    file             go to state 2
    external_decl    go to state 3
    function_def     go to state 4
    decl             go to state 5
    decl_specifiers  go to state 6
    type_specifier   go to state 7


State 1

   12 type_specifier: TYPE .

    $default  reduce using rule 12 (type_specifier)


State 2

    0 $accept: file . $end

    $end  shift, and go to state 8


State 3

    1 file: external_decl .
    2     | external_decl . file

    TYPE  shift, and go to state 1

    $default  reduce using rule 1 (file)

    file             go to state 9
    external_decl    go to state 3
    function_def     go to state 4
    decl             go to state 5
    decl_specifiers  go to state 6
    type_specifier   go to state 7


State 4

    3 external_decl: function_def .

    $default  reduce using rule 3 (external_decl)


State 5

    4 external_decl: decl .

    $default  reduce using rule 4 (external_decl)


State 6

    5 function_def: decl_specifiers . declarator compound_statement
    6 decl: decl_specifiers . SEMICOLON
    7     | decl_specifiers . init_list SEMICOLON

    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    MULT        shift, and go to state 12

    init_list        go to state 13
    init_declarator  go to state 14
    declarator       go to state 15
    pointer          go to state 16


State 7

    8 decl_specifiers: type_specifier .
    9                | type_specifier . decl_specifiers

    TYPE  shift, and go to state 1

    $default  reduce using rule 8 (decl_specifiers)

    decl_specifiers  go to state 17
    type_specifier   go to state 7


State 8

    0 $accept: file $end .

    $default  accept


State 9

    2 file: external_decl file .

    $default  reduce using rule 2 (file)


State 10

    6 decl: decl_specifiers SEMICOLON .

    $default  reduce using rule 6 (decl)


State 11

   25 declarator: IDENTIFIER .

    $default  reduce using rule 25 (declarator)


State 12

   31 pointer: MULT .

    $default  reduce using rule 31 (pointer)


State 13

    7 decl: decl_specifiers init_list . SEMICOLON

    SEMICOLON  shift, and go to state 18


State 14

   13 init_list: init_declarator .
   14          | init_declarator . COMMA init_list

    COMMA  shift, and go to state 19

    $default  reduce using rule 13 (init_list)


State 15

    5 function_def: decl_specifiers declarator . compound_statement
   15 init_declarator: declarator .
   16                | declarator . EQUALS initial_val
   26 declarator: declarator . LBRAC param_list RBRAC
   27           | declarator . LBRAC RBRAC
   28           | declarator . LSQBRAC conditional_expr RSQBRAC
   29           | declarator . LSQBRAC RSQBRAC

    LCURLY   shift, and go to state 20
    LBRAC    shift, and go to state 21
    LSQBRAC  shift, and go to state 22
    EQUALS   shift, and go to state 23

    $default  reduce using rule 15 (init_declarator)

    compound_statement  go to state 24


State 16

   30 declarator: pointer . declarator
   32 pointer: pointer . MULT

    IDENTIFIER  shift, and go to state 11
    MULT        shift, and go to state 25

    declarator  go to state 26
    pointer     go to state 16


State 17

    9 decl_specifiers: type_specifier decl_specifiers .

    $default  reduce using rule 9 (decl_specifiers)


State 18

    7 decl: decl_specifiers init_list SEMICOLON .

    $default  reduce using rule 7 (decl)


State 19

   14 init_list: init_declarator COMMA . init_list

    IDENTIFIER  shift, and go to state 11
    MULT        shift, and go to state 12

    init_list        go to state 27
    init_declarator  go to state 14
    declarator       go to state 28
    pointer          go to state 16


State 20

   36 compound_statement: LCURLY . RCURLY
   37                   | LCURLY . statement_list RCURLY
   38                   | LCURLY . decl_list RCURLY
   39                   | LCURLY . decl_list statement_list RCURLY

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    RCURLY      shift, and go to state 30
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56
    TYPE        shift, and go to state 1

    decl                 go to state 57
    decl_specifiers      go to state 58
    decl_list            go to state 59
    type_specifier       go to state 7
    statement_list       go to state 60
    statement            go to state 61
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 21

   26 declarator: declarator LBRAC . param_list RBRAC
   27           | declarator LBRAC . RBRAC

    RBRAC  shift, and go to state 87
    TYPE   shift, and go to state 1

    decl_specifiers  go to state 88
    type_specifier   go to state 7
    param_list       go to state 89
    param_decl       go to state 90


State 22

   28 declarator: declarator LSQBRAC . conditional_expr RSQBRAC
   29           | declarator LSQBRAC . RSQBRAC

    LBRAC       shift, and go to state 31
    RSQBRAC     shift, and go to state 91
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    conditional_expr  go to state 93
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 94
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 23

   16 init_declarator: declarator EQUALS . initial_val

    LCURLY      shift, and go to state 95
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    initial_val       go to state 96
    assign_expr       go to state 97
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 24

    5 function_def: decl_specifiers declarator compound_statement .

    $default  reduce using rule 5 (function_def)


State 25

   31 pointer: MULT .
   32        | pointer MULT .

    IDENTIFIER  reduce using rule 31 (pointer)
    IDENTIFIER  [reduce using rule 32 (pointer)]
    MULT        reduce using rule 31 (pointer)
    MULT        [reduce using rule 32 (pointer)]
    $default    reduce using rule 31 (pointer)


State 26

   26 declarator: declarator . LBRAC param_list RBRAC
   27           | declarator . LBRAC RBRAC
   28           | declarator . LSQBRAC conditional_expr RSQBRAC
   29           | declarator . LSQBRAC RSQBRAC
   30           | pointer declarator .

    LBRAC    shift, and go to state 21
    LSQBRAC  shift, and go to state 22

    LBRAC     [reduce using rule 30 (declarator)]
    LSQBRAC   [reduce using rule 30 (declarator)]
    $default  reduce using rule 30 (declarator)


State 27

   14 init_list: init_declarator COMMA init_list .

    $default  reduce using rule 14 (init_list)


State 28

   15 init_declarator: declarator .
   16                | declarator . EQUALS initial_val
   26 declarator: declarator . LBRAC param_list RBRAC
   27           | declarator . LBRAC RBRAC
   28           | declarator . LSQBRAC conditional_expr RSQBRAC
   29           | declarator . LSQBRAC RSQBRAC

    LBRAC    shift, and go to state 21
    LSQBRAC  shift, and go to state 22
    EQUALS   shift, and go to state 23

    $default  reduce using rule 15 (init_declarator)


State 29

   52 expr_statement: SEMICOLON .

    $default  reduce using rule 52 (expr_statement)


State 30

   36 compound_statement: LCURLY RCURLY .

    $default  reduce using rule 36 (compound_statement)


State 31

  132 primary_expr: LBRAC . expr RBRAC

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 98
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 32

  130 primary_expr: CHAR .

    $default  reduce using rule 130 (primary_expr)


State 33

  131 primary_expr: STRING .

    $default  reduce using rule 131 (primary_expr)


State 34

   58 tag_statement: IDENTIFIER . COLON statement
  125 primary_expr: IDENTIFIER .

    COLON  shift, and go to state 99

    $default  reduce using rule 125 (primary_expr)


State 35

  126 primary_expr: INT_VAL .

    $default  reduce using rule 126 (primary_expr)


State 36

  129 primary_expr: FLOAT_VAL .

    $default  reduce using rule 129 (primary_expr)


State 37

  127 primary_expr: OCT_VAL .

    $default  reduce using rule 127 (primary_expr)


State 38

  128 primary_expr: HEX_VAL .

    $default  reduce using rule 128 (primary_expr)


State 39

   44 selection_statement: IF . LBRAC expr RBRAC statement
   45                    | IF . LBRAC expr RBRAC statement ELSE statement

    LBRAC  shift, and go to state 100


State 40

   49 loop_statement: FOR . LBRAC expr_statement expr_statement RBRAC statement
   50               | FOR . LBRAC expr_statement expr_statement expr RBRAC statement

    LBRAC  shift, and go to state 101


State 41

   47 loop_statement: WHILE . LBRAC expr RBRAC statement

    LBRAC  shift, and go to state 102


State 42

   54 jump_statement: GOTO_KWD . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 103


State 43

   57 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 104


State 44

   55 jump_statement: RETURN . SEMICOLON
   56               | RETURN . expr SEMICOLON

    SEMICOLON   shift, and go to state 105
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 106
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 45

  113 unary_oper: ADD .

    $default  reduce using rule 113 (unary_oper)


State 46

  114 unary_oper: SUB .

    $default  reduce using rule 114 (unary_oper)


State 47

  112 unary_oper: MULT .

    $default  reduce using rule 112 (unary_oper)


State 48

  111 unary_oper: BW_AND .

    $default  reduce using rule 111 (unary_oper)


State 49

  108 unary_expr: INC . unary_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    unary_expr    go to state 107
    unary_oper    go to state 84
    postfix_expr  go to state 85
    primary_expr  go to state 86


State 50

  109 unary_expr: DEC . unary_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    unary_expr    go to state 108
    unary_oper    go to state 84
    postfix_expr  go to state 85
    primary_expr  go to state 86


State 51

  115 unary_oper: BW_NOT .

    $default  reduce using rule 115 (unary_oper)


State 52

  116 unary_oper: NOT .

    $default  reduce using rule 116 (unary_oper)


State 53

   51 do_statement: DO . statement WHILE LBRAC expr RBRAC SEMICOLON

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 109
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 54

   46 selection_statement: SWITCH . LBRAC expr RBRAC statement

    LBRAC  shift, and go to state 110


State 55

   59 tag_statement: CASE . conditional_expr COLON statement

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    conditional_expr  go to state 111
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 94
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 56

   60 tag_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 112


State 57

   10 decl_list: decl .
   11          | decl . decl_list

    TYPE  shift, and go to state 1

    $default  reduce using rule 10 (decl_list)

    decl             go to state 57
    decl_specifiers  go to state 58
    decl_list        go to state 113
    type_specifier   go to state 7


State 58

    6 decl: decl_specifiers . SEMICOLON
    7     | decl_specifiers . init_list SEMICOLON

    SEMICOLON   shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    MULT        shift, and go to state 12

    init_list        go to state 13
    init_declarator  go to state 14
    declarator       go to state 28
    pointer          go to state 16


State 59

   38 compound_statement: LCURLY decl_list . RCURLY
   39                   | LCURLY decl_list . statement_list RCURLY

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    RCURLY      shift, and go to state 114
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement_list       go to state 115
    statement            go to state 61
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 60

   37 compound_statement: LCURLY statement_list . RCURLY

    RCURLY  shift, and go to state 116


State 61

   17 statement_list: statement .
   18               | statement . statement_list

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    $default  reduce using rule 17 (statement_list)

    statement_list       go to state 117
    statement            go to state 61
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 62

   19 statement: compound_statement .

    $default  reduce using rule 19 (statement)


State 63

   21 statement: selection_statement .

    $default  reduce using rule 21 (statement)


State 64

   22 statement: loop_statement .

    $default  reduce using rule 22 (statement)


State 65

   48 loop_statement: do_statement .

    $default  reduce using rule 48 (loop_statement)


State 66

   20 statement: expr_statement .

    $default  reduce using rule 20 (statement)


State 67

   23 statement: jump_statement .

    $default  reduce using rule 23 (statement)


State 68

   24 statement: tag_statement .

    $default  reduce using rule 24 (statement)


State 69

   53 expr_statement: expr . SEMICOLON
   62 expr: expr . COMMA assign_expr

    SEMICOLON  shift, and go to state 118
    COMMA      shift, and go to state 119


State 70

   61 expr: assign_expr .

    $default  reduce using rule 61 (expr)


State 71

   63 assign_expr: conditional_expr .

    $default  reduce using rule 63 (assign_expr)


State 72

   77 conditional_expr: ie_expr .

    $default  reduce using rule 77 (conditional_expr)


State 73

   76 conditional_expr: logical_or_expr .
   78 ie_expr: logical_or_expr . QUESTION_MARK expr COLON conditional_expr
   80 logical_or_expr: logical_or_expr . OR logical_and_expr

    QUESTION_MARK  shift, and go to state 120
    OR             shift, and go to state 121

    $default  reduce using rule 76 (conditional_expr)


State 74

   79 logical_or_expr: logical_and_expr .
   82 logical_and_expr: logical_and_expr . AND incl_or_expr

    AND  shift, and go to state 122

    $default  reduce using rule 79 (logical_or_expr)


State 75

   81 logical_and_expr: incl_or_expr .
   84 incl_or_expr: incl_or_expr . BW_OR excl_or_expr

    BW_OR  shift, and go to state 123

    $default  reduce using rule 81 (logical_and_expr)


State 76

   83 incl_or_expr: excl_or_expr .
   86 excl_or_expr: excl_or_expr . BW_XOR and_expr

    BW_XOR  shift, and go to state 124

    $default  reduce using rule 83 (incl_or_expr)


State 77

   85 excl_or_expr: and_expr .
   88 and_expr: and_expr . BW_AND bool_equal_expr

    BW_AND  shift, and go to state 125

    $default  reduce using rule 85 (excl_or_expr)


State 78

   87 and_expr: bool_equal_expr .
   90 bool_equal_expr: bool_equal_expr . EQUAL_EQUAL comparison_expr
   91                | bool_equal_expr . NOT_EQUAL comparison_expr

    EQUAL_EQUAL  shift, and go to state 126
    NOT_EQUAL    shift, and go to state 127

    $default  reduce using rule 87 (and_expr)


State 79

   89 bool_equal_expr: comparison_expr .
   93 comparison_expr: comparison_expr . LT shift_expr
   94                | comparison_expr . GT shift_expr
   95                | comparison_expr . LE shift_expr
   96                | comparison_expr . GE shift_expr

    LT  shift, and go to state 128
    GT  shift, and go to state 129
    LE  shift, and go to state 130
    GE  shift, and go to state 131

    $default  reduce using rule 89 (bool_equal_expr)


State 80

   92 comparison_expr: shift_expr .
   98 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   99           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 132
    RIGHT_SHIFT  shift, and go to state 133

    $default  reduce using rule 92 (comparison_expr)


State 81

   97 shift_expr: addsub_expr .
  101 addsub_expr: addsub_expr . ADD multdivmod_expr
  102            | addsub_expr . SUB multdivmod_expr

    ADD  shift, and go to state 134
    SUB  shift, and go to state 135

    $default  reduce using rule 97 (shift_expr)


State 82

  100 addsub_expr: multdivmod_expr .
  104 multdivmod_expr: multdivmod_expr . MULT unary_expr
  105                | multdivmod_expr . DIV unary_expr
  106                | multdivmod_expr . MOD unary_expr

    MULT  shift, and go to state 136
    DIV   shift, and go to state 137
    MOD   shift, and go to state 138

    $default  reduce using rule 100 (addsub_expr)


State 83

   64 assign_expr: unary_expr . assign_oper assign_expr
  103 multdivmod_expr: unary_expr .

    EQUALS        shift, and go to state 139
    MUL_EQUALS    shift, and go to state 140
    DIV_EQUALS    shift, and go to state 141
    MOD_EQUALS    shift, and go to state 142
    ADD_EQUALS    shift, and go to state 143
    SUB_EQUALS    shift, and go to state 144
    LEFT_EQUALS   shift, and go to state 145
    RIGHT_EQUALS  shift, and go to state 146
    AND_EQUALS    shift, and go to state 147
    OR_EQUALS     shift, and go to state 148
    XOR_EQUALS    shift, and go to state 149

    $default  reduce using rule 103 (multdivmod_expr)

    assign_oper  go to state 150


State 84

  110 unary_expr: unary_oper . unary_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    unary_expr    go to state 151
    unary_oper    go to state 84
    postfix_expr  go to state 85
    primary_expr  go to state 86


State 85

  107 unary_expr: postfix_expr .
  118 postfix_expr: postfix_expr . LBRAC RBRAC
  119             | postfix_expr . LBRAC argument_list RBRAC
  120             | postfix_expr . INC
  121             | postfix_expr . DEC
  122             | postfix_expr . LSQBRAC expr RSQBRAC

    LBRAC    shift, and go to state 152
    LSQBRAC  shift, and go to state 153
    INC      shift, and go to state 154
    DEC      shift, and go to state 155

    $default  reduce using rule 107 (unary_expr)


State 86

  117 postfix_expr: primary_expr .

    $default  reduce using rule 117 (postfix_expr)


State 87

   27 declarator: declarator LBRAC RBRAC .

    $default  reduce using rule 27 (declarator)


State 88

   35 param_decl: decl_specifiers . declarator

    IDENTIFIER  shift, and go to state 11
    MULT        shift, and go to state 12

    declarator  go to state 156
    pointer     go to state 16


State 89

   26 declarator: declarator LBRAC param_list . RBRAC

    RBRAC  shift, and go to state 157


State 90

   33 param_list: param_decl .
   34           | param_decl . COMMA param_list

    COMMA  shift, and go to state 158

    $default  reduce using rule 33 (param_list)


State 91

   29 declarator: declarator LSQBRAC RSQBRAC .

    $default  reduce using rule 29 (declarator)


State 92

  125 primary_expr: IDENTIFIER .

    $default  reduce using rule 125 (primary_expr)


State 93

   28 declarator: declarator LSQBRAC conditional_expr . RSQBRAC

    RSQBRAC  shift, and go to state 159


State 94

  103 multdivmod_expr: unary_expr .

    $default  reduce using rule 103 (multdivmod_expr)


State 95

   41 initial_val: LCURLY . init_val_list RCURLY

    LCURLY      shift, and go to state 95
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    initial_val       go to state 160
    init_val_list     go to state 161
    assign_expr       go to state 97
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 96

   16 init_declarator: declarator EQUALS initial_val .

    $default  reduce using rule 16 (init_declarator)


State 97

   40 initial_val: assign_expr .

    $default  reduce using rule 40 (initial_val)


State 98

   62 expr: expr . COMMA assign_expr
  132 primary_expr: LBRAC expr . RBRAC

    COMMA  shift, and go to state 119
    RBRAC  shift, and go to state 162


State 99

   58 tag_statement: IDENTIFIER COLON . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 163
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 100

   44 selection_statement: IF LBRAC . expr RBRAC statement
   45                    | IF LBRAC . expr RBRAC statement ELSE statement

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 164
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 101

   49 loop_statement: FOR LBRAC . expr_statement expr_statement RBRAC statement
   50               | FOR LBRAC . expr_statement expr_statement expr RBRAC statement

    SEMICOLON   shift, and go to state 29
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr_statement    go to state 165
    expr              go to state 69
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 102

   47 loop_statement: WHILE LBRAC . expr RBRAC statement

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 166
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 103

   54 jump_statement: GOTO_KWD IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 167


State 104

   57 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 57 (jump_statement)


State 105

   55 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 55 (jump_statement)


State 106

   56 jump_statement: RETURN expr . SEMICOLON
   62 expr: expr . COMMA assign_expr

    SEMICOLON  shift, and go to state 168
    COMMA      shift, and go to state 119


State 107

  108 unary_expr: INC unary_expr .

    $default  reduce using rule 108 (unary_expr)


State 108

  109 unary_expr: DEC unary_expr .

    $default  reduce using rule 109 (unary_expr)


State 109

   51 do_statement: DO statement . WHILE LBRAC expr RBRAC SEMICOLON

    WHILE  shift, and go to state 169


State 110

   46 selection_statement: SWITCH LBRAC . expr RBRAC statement

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 170
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 111

   59 tag_statement: CASE conditional_expr . COLON statement

    COLON  shift, and go to state 171


State 112

   60 tag_statement: DEFAULT COLON . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 172
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 113

   11 decl_list: decl decl_list .

    $default  reduce using rule 11 (decl_list)


State 114

   38 compound_statement: LCURLY decl_list RCURLY .

    $default  reduce using rule 38 (compound_statement)


State 115

   39 compound_statement: LCURLY decl_list statement_list . RCURLY

    RCURLY  shift, and go to state 173


State 116

   37 compound_statement: LCURLY statement_list RCURLY .

    $default  reduce using rule 37 (compound_statement)


State 117

   18 statement_list: statement statement_list .

    $default  reduce using rule 18 (statement_list)


State 118

   53 expr_statement: expr SEMICOLON .

    $default  reduce using rule 53 (expr_statement)


State 119

   62 expr: expr COMMA . assign_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    assign_expr       go to state 174
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 120

   78 ie_expr: logical_or_expr QUESTION_MARK . expr COLON conditional_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 175
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 121

   80 logical_or_expr: logical_or_expr OR . logical_and_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    logical_and_expr  go to state 176
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 94
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 122

   82 logical_and_expr: logical_and_expr AND . incl_or_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    incl_or_expr     go to state 177
    excl_or_expr     go to state 76
    and_expr         go to state 77
    bool_equal_expr  go to state 78
    comparison_expr  go to state 79
    shift_expr       go to state 80
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 123

   84 incl_or_expr: incl_or_expr BW_OR . excl_or_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    excl_or_expr     go to state 178
    and_expr         go to state 77
    bool_equal_expr  go to state 78
    comparison_expr  go to state 79
    shift_expr       go to state 80
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 124

   86 excl_or_expr: excl_or_expr BW_XOR . and_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    and_expr         go to state 179
    bool_equal_expr  go to state 78
    comparison_expr  go to state 79
    shift_expr       go to state 80
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 125

   88 and_expr: and_expr BW_AND . bool_equal_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    bool_equal_expr  go to state 180
    comparison_expr  go to state 79
    shift_expr       go to state 80
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 126

   90 bool_equal_expr: bool_equal_expr EQUAL_EQUAL . comparison_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    comparison_expr  go to state 181
    shift_expr       go to state 80
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 127

   91 bool_equal_expr: bool_equal_expr NOT_EQUAL . comparison_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    comparison_expr  go to state 182
    shift_expr       go to state 80
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 128

   93 comparison_expr: comparison_expr LT . shift_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    shift_expr       go to state 183
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 129

   94 comparison_expr: comparison_expr GT . shift_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    shift_expr       go to state 184
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 130

   95 comparison_expr: comparison_expr LE . shift_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    shift_expr       go to state 185
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 131

   96 comparison_expr: comparison_expr GE . shift_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    shift_expr       go to state 186
    addsub_expr      go to state 81
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 132

   98 shift_expr: shift_expr LEFT_SHIFT . addsub_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    addsub_expr      go to state 187
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 133

   99 shift_expr: shift_expr RIGHT_SHIFT . addsub_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    addsub_expr      go to state 188
    multdivmod_expr  go to state 82
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 134

  101 addsub_expr: addsub_expr ADD . multdivmod_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    multdivmod_expr  go to state 189
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 135

  102 addsub_expr: addsub_expr SUB . multdivmod_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    multdivmod_expr  go to state 190
    unary_expr       go to state 94
    unary_oper       go to state 84
    postfix_expr     go to state 85
    primary_expr     go to state 86


State 136

  104 multdivmod_expr: multdivmod_expr MULT . unary_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    unary_expr    go to state 191
    unary_oper    go to state 84
    postfix_expr  go to state 85
    primary_expr  go to state 86


State 137

  105 multdivmod_expr: multdivmod_expr DIV . unary_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    unary_expr    go to state 192
    unary_oper    go to state 84
    postfix_expr  go to state 85
    primary_expr  go to state 86


State 138

  106 multdivmod_expr: multdivmod_expr MOD . unary_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    unary_expr    go to state 193
    unary_oper    go to state 84
    postfix_expr  go to state 85
    primary_expr  go to state 86


State 139

   65 assign_oper: EQUALS .

    $default  reduce using rule 65 (assign_oper)


State 140

   66 assign_oper: MUL_EQUALS .

    $default  reduce using rule 66 (assign_oper)


State 141

   67 assign_oper: DIV_EQUALS .

    $default  reduce using rule 67 (assign_oper)


State 142

   68 assign_oper: MOD_EQUALS .

    $default  reduce using rule 68 (assign_oper)


State 143

   69 assign_oper: ADD_EQUALS .

    $default  reduce using rule 69 (assign_oper)


State 144

   70 assign_oper: SUB_EQUALS .

    $default  reduce using rule 70 (assign_oper)


State 145

   71 assign_oper: LEFT_EQUALS .

    $default  reduce using rule 71 (assign_oper)


State 146

   72 assign_oper: RIGHT_EQUALS .

    $default  reduce using rule 72 (assign_oper)


State 147

   73 assign_oper: AND_EQUALS .

    $default  reduce using rule 73 (assign_oper)


State 148

   75 assign_oper: OR_EQUALS .

    $default  reduce using rule 75 (assign_oper)


State 149

   74 assign_oper: XOR_EQUALS .

    $default  reduce using rule 74 (assign_oper)


State 150

   64 assign_expr: unary_expr assign_oper . assign_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    assign_expr       go to state 194
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 151

  110 unary_expr: unary_oper unary_expr .

    $default  reduce using rule 110 (unary_expr)


State 152

  118 postfix_expr: postfix_expr LBRAC . RBRAC
  119             | postfix_expr LBRAC . argument_list RBRAC

    LBRAC       shift, and go to state 31
    RBRAC       shift, and go to state 195
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    assign_expr       go to state 196
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    argument_list     go to state 197
    primary_expr      go to state 86


State 153

  122 postfix_expr: postfix_expr LSQBRAC . expr RSQBRAC

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 198
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 154

  120 postfix_expr: postfix_expr INC .

    $default  reduce using rule 120 (postfix_expr)


State 155

  121 postfix_expr: postfix_expr DEC .

    $default  reduce using rule 121 (postfix_expr)


State 156

   26 declarator: declarator . LBRAC param_list RBRAC
   27           | declarator . LBRAC RBRAC
   28           | declarator . LSQBRAC conditional_expr RSQBRAC
   29           | declarator . LSQBRAC RSQBRAC
   35 param_decl: decl_specifiers declarator .

    LBRAC    shift, and go to state 21
    LSQBRAC  shift, and go to state 22

    $default  reduce using rule 35 (param_decl)


State 157

   26 declarator: declarator LBRAC param_list RBRAC .

    $default  reduce using rule 26 (declarator)


State 158

   34 param_list: param_decl COMMA . param_list

    TYPE  shift, and go to state 1

    decl_specifiers  go to state 88
    type_specifier   go to state 7
    param_list       go to state 199
    param_decl       go to state 90


State 159

   28 declarator: declarator LSQBRAC conditional_expr RSQBRAC .

    $default  reduce using rule 28 (declarator)


State 160

   42 init_val_list: initial_val .
   43              | initial_val . COMMA init_val_list

    COMMA  shift, and go to state 200

    $default  reduce using rule 42 (init_val_list)


State 161

   41 initial_val: LCURLY init_val_list . RCURLY

    RCURLY  shift, and go to state 201


State 162

  132 primary_expr: LBRAC expr RBRAC .

    $default  reduce using rule 132 (primary_expr)


State 163

   58 tag_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 58 (tag_statement)


State 164

   44 selection_statement: IF LBRAC expr . RBRAC statement
   45                    | IF LBRAC expr . RBRAC statement ELSE statement
   62 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 119
    RBRAC  shift, and go to state 202


State 165

   49 loop_statement: FOR LBRAC expr_statement . expr_statement RBRAC statement
   50               | FOR LBRAC expr_statement . expr_statement expr RBRAC statement

    SEMICOLON   shift, and go to state 29
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr_statement    go to state 203
    expr              go to state 69
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 166

   47 loop_statement: WHILE LBRAC expr . RBRAC statement
   62 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 119
    RBRAC  shift, and go to state 204


State 167

   54 jump_statement: GOTO_KWD IDENTIFIER SEMICOLON .

    $default  reduce using rule 54 (jump_statement)


State 168

   56 jump_statement: RETURN expr SEMICOLON .

    $default  reduce using rule 56 (jump_statement)


State 169

   51 do_statement: DO statement WHILE . LBRAC expr RBRAC SEMICOLON

    LBRAC  shift, and go to state 205


State 170

   46 selection_statement: SWITCH LBRAC expr . RBRAC statement
   62 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 119
    RBRAC  shift, and go to state 206


State 171

   59 tag_statement: CASE conditional_expr COLON . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 207
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 172

   60 tag_statement: DEFAULT COLON statement .

    $default  reduce using rule 60 (tag_statement)


State 173

   39 compound_statement: LCURLY decl_list statement_list RCURLY .

    $default  reduce using rule 39 (compound_statement)


State 174

   62 expr: expr COMMA assign_expr .

    $default  reduce using rule 62 (expr)


State 175

   62 expr: expr . COMMA assign_expr
   78 ie_expr: logical_or_expr QUESTION_MARK expr . COLON conditional_expr

    COMMA  shift, and go to state 119
    COLON  shift, and go to state 208


State 176

   80 logical_or_expr: logical_or_expr OR logical_and_expr .
   82 logical_and_expr: logical_and_expr . AND incl_or_expr

    AND  shift, and go to state 122

    $default  reduce using rule 80 (logical_or_expr)


State 177

   82 logical_and_expr: logical_and_expr AND incl_or_expr .
   84 incl_or_expr: incl_or_expr . BW_OR excl_or_expr

    BW_OR  shift, and go to state 123

    $default  reduce using rule 82 (logical_and_expr)


State 178

   84 incl_or_expr: incl_or_expr BW_OR excl_or_expr .
   86 excl_or_expr: excl_or_expr . BW_XOR and_expr

    BW_XOR  shift, and go to state 124

    $default  reduce using rule 84 (incl_or_expr)


State 179

   86 excl_or_expr: excl_or_expr BW_XOR and_expr .
   88 and_expr: and_expr . BW_AND bool_equal_expr

    BW_AND  shift, and go to state 125

    $default  reduce using rule 86 (excl_or_expr)


State 180

   88 and_expr: and_expr BW_AND bool_equal_expr .
   90 bool_equal_expr: bool_equal_expr . EQUAL_EQUAL comparison_expr
   91                | bool_equal_expr . NOT_EQUAL comparison_expr

    EQUAL_EQUAL  shift, and go to state 126
    NOT_EQUAL    shift, and go to state 127

    $default  reduce using rule 88 (and_expr)


State 181

   90 bool_equal_expr: bool_equal_expr EQUAL_EQUAL comparison_expr .
   93 comparison_expr: comparison_expr . LT shift_expr
   94                | comparison_expr . GT shift_expr
   95                | comparison_expr . LE shift_expr
   96                | comparison_expr . GE shift_expr

    LT  shift, and go to state 128
    GT  shift, and go to state 129
    LE  shift, and go to state 130
    GE  shift, and go to state 131

    $default  reduce using rule 90 (bool_equal_expr)


State 182

   91 bool_equal_expr: bool_equal_expr NOT_EQUAL comparison_expr .
   93 comparison_expr: comparison_expr . LT shift_expr
   94                | comparison_expr . GT shift_expr
   95                | comparison_expr . LE shift_expr
   96                | comparison_expr . GE shift_expr

    LT  shift, and go to state 128
    GT  shift, and go to state 129
    LE  shift, and go to state 130
    GE  shift, and go to state 131

    $default  reduce using rule 91 (bool_equal_expr)


State 183

   93 comparison_expr: comparison_expr LT shift_expr .
   98 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   99           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 132
    RIGHT_SHIFT  shift, and go to state 133

    $default  reduce using rule 93 (comparison_expr)


State 184

   94 comparison_expr: comparison_expr GT shift_expr .
   98 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   99           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 132
    RIGHT_SHIFT  shift, and go to state 133

    $default  reduce using rule 94 (comparison_expr)


State 185

   95 comparison_expr: comparison_expr LE shift_expr .
   98 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   99           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 132
    RIGHT_SHIFT  shift, and go to state 133

    $default  reduce using rule 95 (comparison_expr)


State 186

   96 comparison_expr: comparison_expr GE shift_expr .
   98 shift_expr: shift_expr . LEFT_SHIFT addsub_expr
   99           | shift_expr . RIGHT_SHIFT addsub_expr

    LEFT_SHIFT   shift, and go to state 132
    RIGHT_SHIFT  shift, and go to state 133

    $default  reduce using rule 96 (comparison_expr)


State 187

   98 shift_expr: shift_expr LEFT_SHIFT addsub_expr .
  101 addsub_expr: addsub_expr . ADD multdivmod_expr
  102            | addsub_expr . SUB multdivmod_expr

    ADD  shift, and go to state 134
    SUB  shift, and go to state 135

    $default  reduce using rule 98 (shift_expr)


State 188

   99 shift_expr: shift_expr RIGHT_SHIFT addsub_expr .
  101 addsub_expr: addsub_expr . ADD multdivmod_expr
  102            | addsub_expr . SUB multdivmod_expr

    ADD  shift, and go to state 134
    SUB  shift, and go to state 135

    $default  reduce using rule 99 (shift_expr)


State 189

  101 addsub_expr: addsub_expr ADD multdivmod_expr .
  104 multdivmod_expr: multdivmod_expr . MULT unary_expr
  105                | multdivmod_expr . DIV unary_expr
  106                | multdivmod_expr . MOD unary_expr

    MULT  shift, and go to state 136
    DIV   shift, and go to state 137
    MOD   shift, and go to state 138

    $default  reduce using rule 101 (addsub_expr)


State 190

  102 addsub_expr: addsub_expr SUB multdivmod_expr .
  104 multdivmod_expr: multdivmod_expr . MULT unary_expr
  105                | multdivmod_expr . DIV unary_expr
  106                | multdivmod_expr . MOD unary_expr

    MULT  shift, and go to state 136
    DIV   shift, and go to state 137
    MOD   shift, and go to state 138

    $default  reduce using rule 102 (addsub_expr)


State 191

  104 multdivmod_expr: multdivmod_expr MULT unary_expr .

    $default  reduce using rule 104 (multdivmod_expr)


State 192

  105 multdivmod_expr: multdivmod_expr DIV unary_expr .

    $default  reduce using rule 105 (multdivmod_expr)


State 193

  106 multdivmod_expr: multdivmod_expr MOD unary_expr .

    $default  reduce using rule 106 (multdivmod_expr)


State 194

   64 assign_expr: unary_expr assign_oper assign_expr .

    $default  reduce using rule 64 (assign_expr)


State 195

  118 postfix_expr: postfix_expr LBRAC RBRAC .

    $default  reduce using rule 118 (postfix_expr)


State 196

  123 argument_list: assign_expr .
  124              | assign_expr . COMMA argument_list

    COMMA  shift, and go to state 209

    $default  reduce using rule 123 (argument_list)


State 197

  119 postfix_expr: postfix_expr LBRAC argument_list . RBRAC

    RBRAC  shift, and go to state 210


State 198

   62 expr: expr . COMMA assign_expr
  122 postfix_expr: postfix_expr LSQBRAC expr . RSQBRAC

    COMMA    shift, and go to state 119
    RSQBRAC  shift, and go to state 211


State 199

   34 param_list: param_decl COMMA param_list .

    $default  reduce using rule 34 (param_list)


State 200

   43 init_val_list: initial_val COMMA . init_val_list

    LCURLY      shift, and go to state 95
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    initial_val       go to state 160
    init_val_list     go to state 212
    assign_expr       go to state 97
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 201

   41 initial_val: LCURLY init_val_list RCURLY .

    $default  reduce using rule 41 (initial_val)


State 202

   44 selection_statement: IF LBRAC expr RBRAC . statement
   45                    | IF LBRAC expr RBRAC . statement ELSE statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 213
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 203

   49 loop_statement: FOR LBRAC expr_statement expr_statement . RBRAC statement
   50               | FOR LBRAC expr_statement expr_statement . expr RBRAC statement

    LBRAC       shift, and go to state 31
    RBRAC       shift, and go to state 214
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 215
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 204

   47 loop_statement: WHILE LBRAC expr RBRAC . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 216
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 205

   51 do_statement: DO statement WHILE LBRAC . expr RBRAC SEMICOLON

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    expr              go to state 217
    assign_expr       go to state 70
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 206

   46 selection_statement: SWITCH LBRAC expr RBRAC . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 218
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 207

   59 tag_statement: CASE conditional_expr COLON statement .

    $default  reduce using rule 59 (tag_statement)


State 208

   78 ie_expr: logical_or_expr QUESTION_MARK expr COLON . conditional_expr

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    conditional_expr  go to state 219
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 94
    unary_oper        go to state 84
    postfix_expr      go to state 85
    primary_expr      go to state 86


State 209

  124 argument_list: assign_expr COMMA . argument_list

    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 92
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52

    assign_expr       go to state 196
    conditional_expr  go to state 71
    ie_expr           go to state 72
    logical_or_expr   go to state 73
    logical_and_expr  go to state 74
    incl_or_expr      go to state 75
    excl_or_expr      go to state 76
    and_expr          go to state 77
    bool_equal_expr   go to state 78
    comparison_expr   go to state 79
    shift_expr        go to state 80
    addsub_expr       go to state 81
    multdivmod_expr   go to state 82
    unary_expr        go to state 83
    unary_oper        go to state 84
    postfix_expr      go to state 85
    argument_list     go to state 220
    primary_expr      go to state 86


State 210

  119 postfix_expr: postfix_expr LBRAC argument_list RBRAC .

    $default  reduce using rule 119 (postfix_expr)


State 211

  122 postfix_expr: postfix_expr LSQBRAC expr RSQBRAC .

    $default  reduce using rule 122 (postfix_expr)


State 212

   43 init_val_list: initial_val COMMA init_val_list .

    $default  reduce using rule 43 (init_val_list)


State 213

   44 selection_statement: IF LBRAC expr RBRAC statement .
   45                    | IF LBRAC expr RBRAC statement . ELSE statement

    ELSE  shift, and go to state 221

    ELSE      [reduce using rule 44 (selection_statement)]
    $default  reduce using rule 44 (selection_statement)


State 214

   49 loop_statement: FOR LBRAC expr_statement expr_statement RBRAC . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 222
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 215

   50 loop_statement: FOR LBRAC expr_statement expr_statement expr . RBRAC statement
   62 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 119
    RBRAC  shift, and go to state 223


State 216

   47 loop_statement: WHILE LBRAC expr RBRAC statement .

    $default  reduce using rule 47 (loop_statement)


State 217

   51 do_statement: DO statement WHILE LBRAC expr . RBRAC SEMICOLON
   62 expr: expr . COMMA assign_expr

    COMMA  shift, and go to state 119
    RBRAC  shift, and go to state 224


State 218

   46 selection_statement: SWITCH LBRAC expr RBRAC statement .

    $default  reduce using rule 46 (selection_statement)


State 219

   78 ie_expr: logical_or_expr QUESTION_MARK expr COLON conditional_expr .

    $default  reduce using rule 78 (ie_expr)


State 220

  124 argument_list: assign_expr COMMA argument_list .

    $default  reduce using rule 124 (argument_list)


State 221

   45 selection_statement: IF LBRAC expr RBRAC statement ELSE . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 225
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 222

   49 loop_statement: FOR LBRAC expr_statement expr_statement RBRAC statement .

    $default  reduce using rule 49 (loop_statement)


State 223

   50 loop_statement: FOR LBRAC expr_statement expr_statement expr RBRAC . statement

    SEMICOLON   shift, and go to state 29
    LCURLY      shift, and go to state 20
    LBRAC       shift, and go to state 31
    CHAR        shift, and go to state 32
    STRING      shift, and go to state 33
    IDENTIFIER  shift, and go to state 34
    INT_VAL     shift, and go to state 35
    FLOAT_VAL   shift, and go to state 36
    OCT_VAL     shift, and go to state 37
    HEX_VAL     shift, and go to state 38
    IF          shift, and go to state 39
    FOR         shift, and go to state 40
    WHILE       shift, and go to state 41
    GOTO_KWD    shift, and go to state 42
    BREAK       shift, and go to state 43
    RETURN      shift, and go to state 44
    ADD         shift, and go to state 45
    SUB         shift, and go to state 46
    MULT        shift, and go to state 47
    BW_AND      shift, and go to state 48
    INC         shift, and go to state 49
    DEC         shift, and go to state 50
    BW_NOT      shift, and go to state 51
    NOT         shift, and go to state 52
    DO          shift, and go to state 53
    SWITCH      shift, and go to state 54
    CASE        shift, and go to state 55
    DEFAULT     shift, and go to state 56

    statement            go to state 226
    compound_statement   go to state 62
    selection_statement  go to state 63
    loop_statement       go to state 64
    do_statement         go to state 65
    expr_statement       go to state 66
    jump_statement       go to state 67
    tag_statement        go to state 68
    expr                 go to state 69
    assign_expr          go to state 70
    conditional_expr     go to state 71
    ie_expr              go to state 72
    logical_or_expr      go to state 73
    logical_and_expr     go to state 74
    incl_or_expr         go to state 75
    excl_or_expr         go to state 76
    and_expr             go to state 77
    bool_equal_expr      go to state 78
    comparison_expr      go to state 79
    shift_expr           go to state 80
    addsub_expr          go to state 81
    multdivmod_expr      go to state 82
    unary_expr           go to state 83
    unary_oper           go to state 84
    postfix_expr         go to state 85
    primary_expr         go to state 86


State 224

   51 do_statement: DO statement WHILE LBRAC expr RBRAC . SEMICOLON

    SEMICOLON  shift, and go to state 227


State 225

   45 selection_statement: IF LBRAC expr RBRAC statement ELSE statement .

    $default  reduce using rule 45 (selection_statement)


State 226

   50 loop_statement: FOR LBRAC expr_statement expr_statement expr RBRAC statement .

    $default  reduce using rule 50 (loop_statement)


State 227

   51 do_statement: DO statement WHILE LBRAC expr RBRAC SEMICOLON .

    $default  reduce using rule 51 (do_statement)
